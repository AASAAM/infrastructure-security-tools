# OpenSSL intermediate CA configuration file.
# Copy to '/root/ca/ca/openssl.cnf'.

[ ca ]
# 'man ca'
default_ca = CA_default

[ CA_default ]
# Directory and file locations.
dir               = .
certs             = \$dir/ca/certs
crl_dir           = \$dir/ca/crl
new_certs_dir     = \$dir/ca/newcerts
database          = \$dir/ca/index.txt
serial            = \$dir/ca/serial
RANDFILE          = \$dir/ca/private/.rand

# The root key and root certificate.
private_key       = \$dir/ca/private/ca.key.pem
certificate       = \$dir/ca/certs/ca.cert.pem

# For certificate revocation lists.
crlnumber         = \$dir/ca/crlnumber
crl               = \$dir/ca/crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_loose

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of 'man ca'.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the 'ca' man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the 'req' tool ('man req').
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          = sha256

# Extension to add when the -x509 option is used.
x509_extensions     = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

# Optionally, specify some defaults.
countryName_default             = IR
stateOrProvinceName_default     = Tehran
localityName_default            = Tehran
0.organizationName_default      = $INFRASTRUCTURE_NAME
organizationalUnitName_default  = Infrastructure Department
commonName_default              = $INFRASTRUCTURE_TITLE Infrastructure Client Internal Certificate ($CERT_INDEX)
emailAddress_default            = $INFRASTRUCTURE_EMAIL

[ v3_ca ]
# Extensions for a typical CA ('man x509v3_config').
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
issuerAltName = issuer:copy
basicConstraints = CA:false
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA ('man x509v3_config').
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
issuerAltName = issuer:copy
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates ('man x509v3_config').
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "Generated by Infrastructure Department of $INFRASTRUCTURE_NAME"
subjectKeyIdentifier = hash
issuerAltName = issuer:copy
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth, emailProtection

[ server_client_cert ]
# Extensions for client certificates ('man x509v3_config').
basicConstraints = CA:FALSE
nsCertType = client
nsComment = "Generated by Infrastructure Department of $INFRASTRUCTURE_NAME"
subjectKeyIdentifier = hash
issuerAltName = issuer:copy
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

[ server_cert ]
# Extensions for server certificates ('man x509v3_config').
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Generated by Infrastructure Department of $INFRASTRUCTURE_NAME"
subjectKeyIdentifier = hash
issuerAltName = issuer:copy
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[ crl_ext ]
# Extension for CRLs ('man x509v3_config').
authorityKeyIdentifier = keyid:always

[ ocsp ]
# Extension for OCSP signing certificates ('man ocsp').
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

[alt_names]
DNS.1 = $INFRASTRUCTURE_NS.com
DNS.2 = *.$INFRASTRUCTURE_NS.com
DNS.5 = $INFRASTRUCTURE_NS.net
DNS.6 = *.$INFRASTRUCTURE_NS.net
DNS.7 = $INFRASTRUCTURE_NS.cloud
DNS.8 = *.$INFRASTRUCTURE_NS.cloud
DNS.9 = $INFRASTRUCTURE_NS.org
DNS.10 = *.$INFRASTRUCTURE_NS.org
DNS.11 = *.$INFRASTRUCTURE_NS


